{
    "swagger": "2.0",
    "info": {
        "description": "API for managing applications, services, and infrastructure on Runway",
        "title": "Runway Controller API",
        "termsOfService": "https://runway.horse/company/legal/tos/",
        "contact": {
            "name": "Runway",
            "url": "https://runway.horse/company/support/",
            "email": "support@runway.horse"
        },
        "license": {
            "name": "Proprietary",
            "url": "https://runway.horse/company/legal"
        },
        "version": "1.0"
    },
    "host": "api.runway.horse",
    "basePath": "/",
    "paths": {
        "/v3/apps": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns a paginated list of applications on Runway for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apps"
                ],
                "summary": "List Runway apps",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Include deleted apps",
                        "name": "deleted",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Runway apps",
                        "schema": {
                            "$ref": "#/definitions/api.AppList"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new application on Runway with the specified configuration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apps"
                ],
                "summary": "Create a new Runway app",
                "parameters": [
                    {
                        "description": "Application creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.AppCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created Runway app",
                        "schema": {
                            "$ref": "#/definitions/api.App"
                        }
                    },
                    "400": {
                        "description": "Invalid request or plan not supported",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "403": {
                        "description": "Plan limits exceeded or insufficient permissions",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Restores an application on Runway from a backup to a previous state",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apps"
                ],
                "summary": "Restore Runway app",
                "parameters": [
                    {
                        "description": "Restore request with backup ID",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_endpoints.AppRestoreRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully restored Runway app",
                        "schema": {
                            "$ref": "#/definitions/api.App"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "404": {
                        "description": "App or backup not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    }
                }
            }
        },
        "/v3/apps/metrics/{rest}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Proxies metrics requests to the monitoring backend for Runway applications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apps"
                ],
                "summary": "Get Runway app metrics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Metrics endpoint path",
                        "name": "rest",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Metrics data",
                        "schema": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Proxies metrics requests to the monitoring backend for Runway applications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apps"
                ],
                "summary": "Get Runway app metrics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Metrics endpoint path",
                        "name": "rest",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Metrics data",
                        "schema": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    }
                }
            }
        },
        "/v3/apps/{app}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns detailed information about a specific application on Runway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apps"
                ],
                "summary": "Get Runway app details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Application name",
                        "name": "app",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Runway app details",
                        "schema": {
                            "$ref": "#/definitions/api.App"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "404": {
                        "description": "App not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permanently deletes an application on Runway and all associated resources",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apps"
                ],
                "summary": "Delete Runway app",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Application name",
                        "name": "app",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted Runway app"
                    },
                    "400": {
                        "description": "Cannot delete a service",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "404": {
                        "description": "App not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    }
                }
            }
        },
        "/v3/apps/{app}/config": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns the configuration variables for an application on Runway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apps"
                ],
                "summary": "Get Runway app configuration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Application name",
                        "name": "app",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Runway app configuration",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway_sdk_api.Config"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "404": {
                        "description": "App not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates configuration variables for an application on Runway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apps"
                ],
                "summary": "Update Runway app configuration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Application name",
                        "name": "app",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Configuration update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ConfigUnset"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated Runway app configuration",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway_sdk_api.Config"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "404": {
                        "description": "App not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    }
                }
            }
        },
        "/v3/apps/{app}/domains": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns a list of all domains for a Runway app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apps"
                ],
                "summary": "List app domains",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App name",
                        "name": "app",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of domains for Runway app",
                        "schema": {
                            "$ref": "#/definitions/api.DomainListResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "404": {
                        "description": "App not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a custom domain for a Runway app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apps"
                ],
                "summary": "Create app domain",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App name",
                        "name": "app",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Domain creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.DomainCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created domain for Runway app",
                        "schema": {
                            "$ref": "#/definitions/api.Domain"
                        }
                    },
                    "400": {
                        "description": "Invalid domain or domain already exists",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "404": {
                        "description": "App not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    }
                }
            }
        },
        "/v3/apps/{app}/domains/{domain}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Removes a custom domain from a Runway app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apps"
                ],
                "summary": "Remove app domain",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App name",
                        "name": "app",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Domain name",
                        "name": "domain",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully removed domain from Runway app"
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "404": {
                        "description": "App or domain not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    }
                }
            }
        },
        "/v3/apps/{app}/exec": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Executes a command inside a Runway app container via WebSocket",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apps"
                ],
                "summary": "Execute command in Runway app",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App name",
                        "name": "app",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Command to execute",
                        "name": "command",
                        "in": "query"
                    }
                ],
                "responses": {
                    "101": {
                        "description": "WebSocket connection for command execution"
                    },
                    "400": {
                        "description": "Invalid request or app not running",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "404": {
                        "description": "App not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    }
                }
            }
        },
        "/v3/apps/{app}/permissions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns the list of users with access to a Runway app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apps"
                ],
                "summary": "Get app permissions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App name",
                        "name": "app",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of app permissions",
                        "schema": {
                            "$ref": "#/definitions/api.AppPermissionList"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "404": {
                        "description": "App not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Grants access permissions to a user for a Runway app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apps"
                ],
                "summary": "Grant app permissions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App name",
                        "name": "app",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Permission grant request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.AppPermissionPutRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully granted permissions for Runway app"
                    },
                    "400": {
                        "description": "Invalid request or user not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "404": {
                        "description": "App not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Revokes access permissions from a user for a Runway app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apps"
                ],
                "summary": "Revoke app permissions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App name",
                        "name": "app",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Permission revoke request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.AppPermissionDeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully revoked permissions on Runway app"
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "404": {
                        "description": "App or permission not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    }
                }
            }
        },
        "/v3/apps/{app}/plan": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Changes the plan of a Runway app and redeploys if already deployed",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apps"
                ],
                "summary": "Change Runway app plan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App name",
                        "name": "app",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Plan change request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully changed Runway app plan",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request or plan not supported",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "404": {
                        "description": "App not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    }
                }
            }
        },
        "/v3/apps/{app}/pods": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns information about running pods for an application on Runway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apps"
                ],
                "summary": "Get Runway app pods",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Application name",
                        "name": "app",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Runway app pods information",
                        "schema": {
                            "$ref": "#/definitions/internal_endpoints.AppsPodsResponse"
                        }
                    },
                    "400": {
                        "description": "No pods info for a service",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "404": {
                        "description": "App not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    }
                }
            }
        },
        "/v3/apps/{app}/releases": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns a paginated list of releases for an application on Runway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apps"
                ],
                "summary": "Get Runway app releases",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Application name",
                        "name": "app",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "from",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Runway app releases",
                        "schema": {
                            "$ref": "#/definitions/internal_endpoints.AppsReleasesResponse"
                        }
                    },
                    "400": {
                        "description": "No releases info for a service",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "404": {
                        "description": "App not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    }
                }
            }
        },
        "/v3/apps/{app}/restart": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Restarts an application on Runway by performing a rolling restart of all pods",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apps"
                ],
                "summary": "Restart Runway app",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Application name",
                        "name": "app",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully restarted Runway app"
                    },
                    "400": {
                        "description": "Cannot restart a service",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "404": {
                        "description": "App not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    }
                }
            }
        },
        "/v3/apps/{app}/settings": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns the configuration settings for a Runway app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apps"
                ],
                "summary": "Get Runway app settings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App name",
                        "name": "app",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Runway app settings",
                        "schema": {
                            "$ref": "#/definitions/api.AppSettings"
                        }
                    },
                    "400": {
                        "description": "Invalid request or not an app",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "404": {
                        "description": "App or settings not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates the configuration settings for a Runway app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apps"
                ],
                "summary": "Update Runway app settings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App name",
                        "name": "app",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "App settings update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.AppSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated Runway app settings",
                        "schema": {
                            "$ref": "#/definitions/api.AppSettings"
                        }
                    },
                    "400": {
                        "description": "Invalid request or not an app",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "404": {
                        "description": "App not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    }
                }
            }
        },
        "/v3/auth/login": {
            "post": {
                "description": "Authenticates a user and returns session information for Runway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Authenticate user",
                "responses": {
                    "200": {
                        "description": "Successfully authenticated",
                        "schema": {
                            "$ref": "#/definitions/api.AuthLoginResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    }
                }
            }
        },
        "/v3/auth/logout": {
            "post": {
                "description": "Logs out the current user from Runway and invalidates the session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Logout from Runway",
                "parameters": [
                    {
                        "description": "Logout request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.AuthLogoutRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "schema": {
                            "$ref": "#/definitions/api.AuthLogoutResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    }
                }
            }
        },
        "/v3/auth/whoami": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns information about the currently authenticated user on Runway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get current user information",
                "responses": {
                    "200": {
                        "description": "Current user information",
                        "schema": {
                            "$ref": "#/definitions/api.User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    }
                }
            }
        },
        "/v3/domains": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns a list of all domains configured on Runway for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domains"
                ],
                "summary": "List domains",
                "responses": {
                    "200": {
                        "description": "List of domains",
                        "schema": {
                            "$ref": "#/definitions/api.RootDomainListResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new domain configuration on Runway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domains"
                ],
                "summary": "Create domain",
                "parameters": [
                    {
                        "description": "Domain creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.DomainCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created domain",
                        "schema": {
                            "$ref": "#/definitions/api.Domain"
                        }
                    },
                    "400": {
                        "description": "Invalid request or domain already exists",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    }
                }
            }
        },
        "/v3/domains/{domain}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Removes a domain configuration from Runway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domains"
                ],
                "summary": "Delete domain",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Domain name",
                        "name": "domain",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted domain"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "404": {
                        "description": "Domain not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    }
                }
            }
        },
        "/v3/domains/{domain}/verify": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Verifies domain ownership by checking DNS records on Runway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domains"
                ],
                "summary": "Verify domain ownership",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Domain name",
                        "name": "domain",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Domain verification result",
                        "schema": {
                            "$ref": "#/definitions/api.RootDomainResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid domain or verification failed",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "404": {
                        "description": "Domain not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    }
                }
            }
        },
        "/v3/keys": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns a list of SSH keys configured on Runway for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "keys"
                ],
                "summary": "List SSH keys",
                "responses": {
                    "200": {
                        "description": "List of SSH keys",
                        "schema": {
                            "$ref": "#/definitions/api.KeyListResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Adds a new SSH key to Runway for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "keys"
                ],
                "summary": "Add SSH key",
                "parameters": [
                    {
                        "description": "SSH key creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.KeyCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created SSH key",
                        "schema": {
                            "$ref": "#/definitions/api.Key"
                        }
                    },
                    "400": {
                        "description": "Invalid SSH key or key already exists",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    }
                }
            }
        },
        "/v3/keys/{keyid}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Removes an SSH key from Runway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "keys"
                ],
                "summary": "Delete SSH key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SSH key ID",
                        "name": "keyid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted SSH key"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "404": {
                        "description": "SSH key not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    }
                }
            }
        },
        "/v3/plans": {
            "get": {
                "description": "Returns a list of all available plans on Runway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plans"
                ],
                "summary": "List available plans",
                "responses": {
                    "200": {
                        "description": "List of available plans",
                        "schema": {
                            "$ref": "#/definitions/api.PlanListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    }
                }
            }
        },
        "/v3/policies": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns a list of all backup and retention policies for Runway services",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "policies"
                ],
                "summary": "List service policies",
                "responses": {
                    "200": {
                        "description": "List of service policies",
                        "schema": {
                            "$ref": "#/definitions/api.PolicyResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    }
                }
            }
        },
        "/v3/regions": {
            "get": {
                "description": "Returns a list of all available deployment regions on Runway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "regions"
                ],
                "summary": "List available regions",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Include all regions (including inactive ones)",
                        "name": "all",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of available regions",
                        "schema": {
                            "$ref": "#/definitions/api.RegionsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    }
                }
            }
        },
        "/v3/services": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns a list of database services on Runway for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "services"
                ],
                "summary": "List Runway services",
                "responses": {
                    "200": {
                        "description": "List of Runway services",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Service"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new database service on Runway with the specified configuration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "services"
                ],
                "summary": "Create Runway service",
                "parameters": [
                    {
                        "description": "Service creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ServiceCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created Runway service",
                        "schema": {
                            "$ref": "#/definitions/api.Service"
                        }
                    },
                    "400": {
                        "description": "Invalid request or plan not supported",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "403": {
                        "description": "Plan limits exceeded",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    }
                }
            }
        },
        "/v3/services/{app}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns detailed information about a specific database service on Runway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "services"
                ],
                "summary": "Get Runway service details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service name",
                        "name": "app",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Runway service details",
                        "schema": {
                            "$ref": "#/definitions/api.Service"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "404": {
                        "description": "Service not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates a database service on Runway (e.g., change plan)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "services"
                ],
                "summary": "Update Runway service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service name",
                        "name": "app",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Service update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ServiceUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated Runway service",
                        "schema": {
                            "$ref": "#/definitions/api.Service"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "404": {
                        "description": "Service not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permanently deletes a database service on Runway and all associated data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "services"
                ],
                "summary": "Delete Runway service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service name",
                        "name": "app",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted Runway service"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "404": {
                        "description": "Service not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    }
                }
            }
        },
        "/v3/volumes": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns a list of all storage volumes on Runway for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "volumes"
                ],
                "summary": "List volumes",
                "responses": {
                    "200": {
                        "description": "List of volumes",
                        "schema": {
                            "$ref": "#/definitions/api.VolumesResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.App": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.AppFeatures"
                    }
                },
                "id": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/api.AppMeta"
                },
                "owner": {
                    "type": "string"
                },
                "plan": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                }
            }
        },
        "api.AppCreateRequest": {
            "type": "object",
            "required": [
                "id",
                "plan"
            ],
            "properties": {
                "features": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.AppFeatures"
                    }
                },
                "id": {
                    "type": "string"
                },
                "plan": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                }
            }
        },
        "api.AppFeatures": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "boolean"
                }
            }
        },
        "api.AppList": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "next": {
                    "type": "string"
                },
                "previous": {
                    "type": "string"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.App"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "api.AppMeta": {
            "type": "object",
            "properties": {
                "role": {
                    "type": "string"
                }
            }
        },
        "api.AppPermissionDeleteRequest": {
            "type": "object",
            "required": [
                "user"
            ],
            "properties": {
                "user": {
                    "type": "string"
                }
            }
        },
        "api.AppPermissionList": {
            "type": "object"
        },
        "api.AppPermissionPutRequest": {
            "type": "object",
            "required": [
                "role",
                "user"
            ],
            "properties": {
                "role": {
                    "$ref": "#/definitions/api.AppPermissionRole"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "api.AppPermissionRole": {
            "type": "string",
            "enum": [
                "owner",
                "developer",
                "viewer"
            ],
            "x-enum-varnames": [
                "AppPermissionRoleOwner",
                "AppPermissionRoleDeveloper",
                "AppPermissionRoleViewer"
            ]
        },
        "api.AppSettings": {
            "type": "object",
            "properties": {
                "app": {
                    "description": "App is the app name. It cannot be updated at all right now.",
                    "type": "string"
                },
                "autoscale": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/api.Autoscale"
                    }
                },
                "created": {
                    "description": "Created is the time that the application settings was created and cannot be updated.",
                    "type": "string"
                },
                "label": {
                    "$ref": "#/definitions/api.Labels"
                },
                "maintenance": {
                    "description": "Maintenance determines if the application is taken down for maintenance or not.",
                    "type": "boolean"
                },
                "owner": {
                    "description": "Owner is the app owner. It cannot be updated with AppSettings.Set(). See app.Transfer().",
                    "type": "string"
                },
                "routable": {
                    "description": "Routable determines if the application should be exposed by the router.\nNOTE this is the only thing currently supported",
                    "type": "boolean"
                },
                "updated": {
                    "description": "Updated is the last time the application settings was changed and cannot be updated.",
                    "type": "string"
                },
                "uuid": {
                    "description": "UUID is a unique string reflecting the application settings in its current state.\nIt changes every time the application settings is changed and cannot be updated.",
                    "type": "string"
                },
                "whitelist": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "api.AuthLoginResponse": {
            "type": "object",
            "required": [
                "token"
            ],
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "api.AuthLogoutRequest": {
            "type": "object",
            "required": [
                "token"
            ],
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "api.AuthLogoutResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "api.Autoscale": {
            "type": "object",
            "properties": {
                "cpu_percent": {
                    "type": "integer"
                },
                "max": {
                    "type": "integer"
                },
                "min": {
                    "type": "integer"
                }
            }
        },
        "api.ConfigUnset": {
            "type": "object",
            "required": [
                "values"
            ],
            "properties": {
                "values": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "api.Domain": {
            "type": "object",
            "properties": {
                "app": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "deletable": {
                    "type": "boolean"
                },
                "domain": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "root": {
                    "$ref": "#/definitions/api.RootDomain"
                },
                "updated": {
                    "type": "string"
                }
            }
        },
        "api.DomainCreateRequest": {
            "type": "object",
            "required": [
                "domain"
            ],
            "properties": {
                "domain": {
                    "type": "string"
                }
            }
        },
        "api.DomainListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Domain"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.ExecProbe": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "api.HTTPGetProbe": {
            "type": "object",
            "properties": {
                "httpHeaders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.KVPair"
                    }
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                }
            }
        },
        "api.Healthcheck": {
            "type": "object",
            "properties": {
                "exec": {
                    "$ref": "#/definitions/api.ExecProbe"
                },
                "failureThreshold": {
                    "type": "integer"
                },
                "httpGet": {
                    "$ref": "#/definitions/api.HTTPGetProbe"
                },
                "initialDelaySeconds": {
                    "type": "integer"
                },
                "periodSeconds": {
                    "type": "integer"
                },
                "successThreshold": {
                    "type": "integer"
                },
                "tcpSocket": {
                    "$ref": "#/definitions/api.TCPSocketProbe"
                },
                "timeoutSeconds": {
                    "type": "integer"
                }
            }
        },
        "api.Healthchecks": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/api.Healthcheck"
            }
        },
        "api.KVPair": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "api.Key": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "public": {
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "api.KeyCreateRequest": {
            "type": "object",
            "required": [
                "id",
                "public"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "public": {
                    "type": "string"
                }
            }
        },
        "api.KeyListResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "next": {
                    "type": "string"
                },
                "previous": {
                    "type": "string"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Key"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "api.Labels": {
            "type": "object",
            "additionalProperties": true
        },
        "api.Plan": {
            "type": "object",
            "properties": {
                "autoscaling": {
                    "type": "boolean"
                },
                "bandwidth_mbits": {
                    "description": "Bandwidth, always in mbit/s",
                    "type": "integer"
                },
                "cpu": {
                    "description": "CPU represents cores",
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "hdd_mb": {
                    "description": "HDD is app disk, always in Megabyte",
                    "type": "integer"
                },
                "permutation": {
                    "type": "string"
                },
                "persistency": {
                    "type": "boolean"
                },
                "plan": {
                    "type": "string"
                },
                "price_hour": {
                    "description": "Price is euro cents per hour",
                    "type": "number"
                },
                "ram_mb": {
                    "description": "RAM is app memory, always in Megabyte",
                    "type": "integer"
                },
                "sku": {
                    "description": "SKU is a plan identifier which is immutable",
                    "type": "string"
                },
                "storage_upgrades": {
                    "type": "boolean"
                }
            }
        },
        "api.PlanListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Plan"
                    }
                }
            }
        },
        "api.Pods": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "release": {
                    "type": "string"
                },
                "started": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "api.Policy": {
            "type": "object",
            "properties": {
                "app": {
                    "type": "string"
                },
                "from": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "api.PolicyResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "next": {
                    "type": "string"
                },
                "previous": {
                    "type": "string"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Policy"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.Region": {
            "type": "object",
            "properties": {
                "continent": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "country_code": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "live_status": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "api.RegionsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Region"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.RootDomain": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "lastcheck": {
                    "type": "string"
                },
                "lastcheckmsg": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "txtrecord": {
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                },
                "verified": {
                    "type": "boolean"
                }
            }
        },
        "api.RootDomainListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.RootDomain"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.RootDomainResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.RootDomain"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.Service": {
            "type": "object",
            "properties": {
                "credentials": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.ServiceEndpoint"
                    }
                },
                "has_backup": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "plan": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                },
                "volumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.ServiceVolumeEntity"
                    }
                }
            }
        },
        "api.ServiceCreateRequest": {
            "type": "object",
            "required": [
                "name",
                "plan",
                "version"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "plan": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "postgres",
                        "cache",
                        "s3"
                    ]
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "api.ServiceEndpoint": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "api.ServiceUpdateRequest": {
            "type": "object",
            "required": [
                "plan"
            ],
            "properties": {
                "plan": {
                    "type": "string"
                }
            }
        },
        "api.ServiceVolumeEntity": {
            "type": "object",
            "properties": {
                "mountpoint": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "string"
                }
            }
        },
        "api.TCPSocketProbe": {
            "type": "object",
            "properties": {
                "port": {
                    "type": "integer"
                }
            }
        },
        "api.User": {
            "type": "object",
            "properties": {
                "date_joined": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_staff": {
                    "type": "boolean"
                },
                "is_superuser": {
                    "type": "boolean"
                },
                "last_login": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "api.VolumeEntity": {
            "type": "object",
            "properties": {
                "app": {
                    "type": "string"
                },
                "attachable": {
                    "type": "boolean"
                },
                "deletable": {
                    "type": "boolean"
                },
                "detachable": {
                    "type": "boolean"
                },
                "mountpoint": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "resizable": {
                    "type": "boolean"
                },
                "size": {
                    "type": "string"
                }
            }
        },
        "api.VolumesResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "next": {
                    "type": "string"
                },
                "previous": {
                    "type": "string"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.VolumeEntity"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "github_com_hostwithquantum_runway-controller-next_internal_app.StatusErrResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "github_com_hostwithquantum_runway_sdk_api.Config": {
            "type": "object",
            "properties": {
                "app": {
                    "description": "App is the app name. It cannot be updated at all right now.",
                    "type": "string"
                },
                "cpu": {
                    "description": "CPU is used to set process CPU limits. It can be set in terms of whole CPUs\n(ex 1) or in milli units to reflect the number of CPU shares (ex 500m).",
                    "type": "object",
                    "additionalProperties": true
                },
                "created": {
                    "description": "Created is the time that the configuration was created and cannot be updated.",
                    "type": "string"
                },
                "ephemeral": {
                    "description": "Ephemeral determines if an app has persistent storage attached to it",
                    "type": "boolean"
                },
                "healthcheck": {
                    "description": "Healthcheck is map of healthchecks for each process that the application uses.",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/api.Healthchecks"
                    }
                },
                "memory": {
                    "description": "Memory is used to set process memory limits. The key is the process name\nand the value is a number followed by a memory unit (G, M, K, or B). Ex: 200G",
                    "type": "object",
                    "additionalProperties": true
                },
                "owner": {
                    "description": "Owner is the app owner. It cannot be updated with config.Set(). See app.Transfer().",
                    "type": "string"
                },
                "registry": {
                    "description": "Registry is a key-value pair to provide authentication for docker registries.\nThe key is the username and the value is the password.",
                    "type": "object",
                    "additionalProperties": true
                },
                "tags": {
                    "description": "Tags restrict applications to run on k8s nodes with that label.",
                    "type": "object",
                    "additionalProperties": true
                },
                "termination_grace_period": {
                    "description": "Timeout is used to set termination grace period. The key is the process name\nand the value is a number in seconds, e.g. 30",
                    "type": "object",
                    "additionalProperties": true
                },
                "updated": {
                    "description": "Updated is the last time the configuration was changed and cannot be updated.",
                    "type": "string"
                },
                "uuid": {
                    "description": "UUID is a unique string reflecting the configuration in its current state.\nIt changes every time the configuration is changed and cannot be updated.",
                    "type": "string"
                },
                "values": {
                    "description": "Values are exposed as environment variables to the app.",
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "internal_endpoints.AppRestoreRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "internal_endpoints.AppsPodsResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "next": {
                    "type": "string"
                },
                "previous": {
                    "type": "string"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Pods"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "internal_endpoints.AppsRelease": {
            "type": "object",
            "properties": {
                "app": {
                    "type": "string"
                },
                "build": {
                    "type": "string"
                },
                "config": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "exception": {
                    "type": "string"
                },
                "failed": {
                    "type": "boolean"
                },
                "owner": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "internal_endpoints.AppsReleasesResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "next": {
                    "type": "string"
                },
                "previous": {
                    "type": "string"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internal_endpoints.AppsRelease"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "Bearer token for API authentication",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}